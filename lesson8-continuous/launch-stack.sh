#!/usr/bin/env bash
# Bash template based on https://github.com/eppeters/bashtemplate.sh
set -euo pipefail
IFS=$'\n\t'

#/ Usage: launch-stack.sh MYNAME [TMPDIR] [S3_BUCKET] [SAM_STACK_NAME] [CFN_STACK_NAME] [PIPELINE_YAML]
#/ Description: Launch the Pipeline stack, which then continuously creates the
#/ app stack, to begin deployment of Lambda functions for Config Rules. 
#/ Examples:
#/  launch-stack.sh       (launches a stack using the the env var MYNAME, or shows you these docs if it is unset)
#/  launch-stack.sh eddie (launches a stack with buckets and stack names autogenerated based on the name "eddie")
#/ Options:
#/   --help: Display this help message
usage() { grep '^#/' "$0" | cut -c4- ; exit 1 ; }
expr "$*" : ".*--help" > /dev/null && usage

readonly LOG_FILE="/tmp/$(basename "$0").log"
info()    { echo "[INFO]    $@" | tee -a "$LOG_FILE" >&2 ; }
warning() { echo "[WARNING] $@" | tee -a "$LOG_FILE" >&2 ; }
error()   { echo "[ERROR]   $@" | tee -a "$LOG_FILE" >&2 ; }
fatal()   { echo "[FATAL]   $@" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

AWS_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/\(.*\)[a-z]/\1/')

MYNAME=${1:-${MYNAME:-}}
if [ -z "$MYNAME" ]; then
    usage
fi

TMPDIR=${2:-.tmp-gitrepo}
UUID=${3:-ceoa-8}
S3BUCKET=${4:-$UUID}
# SAMSTACK is the app stack, whereas CFNSTACK is the pipeline stack
SAMSTACK=${5:-$UUID-pl-$MYNAME-$AWS_REGION}
CFNSTACK=${6:-$UUID-pl-$MYNAME}
PIPELINEYAML=${7:-$UUID-pipeline.yml}
UNENCRYPTEDS3BUCKETPREFIX=${8:-$UUID-s3-unencrypted}


cleanup() {
    sudo rm -rf $TMPDIR
}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    trap cleanup EXIT
    sudo rm -rf $TMPDIR
    mkdir $TMPDIR
    cd $TMPDIR
    
    info "Delete existing Config Rule"
    
    # sgGroup_id=$(aws configservice describe-config-rules --config-rule-names s3-bucket-server-side-encryption-enabled)
    # info "Display return code"
    # echo $sgGroup_id

    info "Detecting which git protocol to use for our 'git clone' command"
    set +e
    if git --git-dir ../.git remote show origin  | grep Fetch | grep -i 'paulduvall/aws-encryption-workshop'; then
        # Use whatever git protocol the user prefers
        set -e
        clone_source="$(git --git-dir ../.git remote show origin  | grep Fetch | awk '{print $3;}')"
        git clone "$clone_source" aws-encryption-workshop
    else
        # Default to https
        set -e
        clone_source="https://github.com/PaulDuvall/aws-encryption-workshop.git"
    fi
    info "Cloning from $clone_source into $TMPDIR/$UUID-temp"
    rm -rf $UUID-temp
    git clone "$clone_source" $UUID-temp
    cd $UUID-temp/lesson8-continuous

    echo "Removing S3 buckets starting with $S3BUCKET that were previously used by this script"    
    # aws s3api list-buckets --query 'Buckets[?starts_with(Name, `'$S3BUCKET'`) == `true`].[Name]' --output text | xargs -I {} aws s3 rb s3://{} --force
    
    info Sleeping for 20 seconds to ensure bucket removal has taken effect
    sleep 20
    
    s3_bucket_qualified="$S3BUCKET-$(aws sts get-caller-identity --output text --query 'Account')"
    info "Creating a bucket called $s3_bucket_qualified"
    aws s3 mb "s3://$s3_bucket_qualified"
    
    info "Ensuring stack $SAMSTACK is deleted"
    aws cloudformation delete-stack --stack-name $SAMSTACK
    info "Waiting for stack $SAMSTACK to delete"
    aws cloudformation wait stack-delete-complete --stack-name $SAMSTACK
    info "Ensuring stack $CFNSTACK is deleted"
    aws cloudformation delete-stack --stack-name $CFNSTACK
    info "Waiting for stack $CFNSTACK to delete"
    aws cloudformation wait stack-delete-complete --stack-name $CFNSTACK
    
    zip -r $S3BUCKET.zip . -x '*.git*'
    # zip -r $CFNSTACK.zip .
    mkdir zipfiles
    cp $PIPELINEYAML zipfiles
    mv $S3BUCKET.zip zipfiles
    cd zipfiles

    info Syncing locally built zip to $s3_bucket_qualified    
    aws s3 sync . "s3://$s3_bucket_qualified"
   
    info Creating the pipeline stack $CFNSTACK 
aws cloudformation create-stack --stack-name $CFNSTACK --capabilities CAPABILITY_NAMED_IAM --disable-rollback --template-body file://$PIPELINEYAML --parameters ParameterKey=EmailAddress,ParameterValue=fake-email@fake-fake-fake-email.com ParameterKey=CodeCommitS3Bucket,ParameterValue=$S3BUCKET-$(aws sts get-caller-identity --output text --query 'Account') ParameterKey=CodeCommitS3Key,ParameterValue=$S3BUCKET.zip ParameterKey=S3ComplianceResourceId,ParameterValue=$UNENCRYPTEDS3BUCKETPREFIX-$(aws sts get-caller-identity --output text --query 'Account')

fi